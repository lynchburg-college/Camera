#!/bin/bash

# Common
source "${0%/*}/config/common"
source "${0%/*}/config/machine"

file=$1

# Only need to do this is if we find the file..
if [ ! -e "$file" ] 
then
  log "$file not found!"
  exit 1
fi

# .. and the file is an original recording
base=$(basename "$file")
ext="${base##*.}"
if [ ! $ext == "mp4" ] 
then
 log "Ignoring $file (not a recording)" 
 exit 1
fi

# .. and we have somewhere to upload it..
if [ -z "$urlUpload" ]
then
  echo "No upload required"
  exit 1
fi

{
         # Get the stats of the original
         /usr/bin/avprobe $file &> $file.info

   	     # Convert the file
 		 /usr/bin/HandBrakeCLI --optimize --encoder x264 -vb 900 -ab 128 -i $file -o $file.converted

         # Get the stats of the converted file
         /usr/bin/avprobe $file.converted &> $file.converted.info

		 if grep -q "HandBrake" $file.converted
 		 then
 		  file=$file.converted
 		 fi

         # If the filename is a date, use it as the start time
         baseName=$(basename "$file")
         baseName="${baseName%.*}"

         date -d @$baseName > /dev/null 2>&1

         if [ ! $? -eq 1 ]
         then
            asOf=$baseName
            log "Using filename ($baseName) as creation date"
         else
            asOf=$(stat -c "%s" $file)
            log "Using file modified date ($asOf)"
         fi

         #Use the local init-schedule file to look up metadata
         log "Metadata date is : $asOf"
         info=$(./parse meta "$asOf")


         # Couldn't find anything?  That's OK.. use the default stuff
         if [ "$info" == "" ]
         then
             log "Couldn't find metadata : $roomID / $asOf"
             info="-F \"userID=capture_$roomID\" -F \"public=1\" -F \"title=$roomID Recording\""
         else
             log "Matched : $info"
         fi
           
         echo "$info" > $file.meta
                    
         # Post to the media server
         cmd="/usr/bin/curl $info -F \"batchMode=Y\" -F \"convert=no\" -F \"keywords=$roomID $baseName\" -F \"file=@$file\"  $urlUpload"
         log "$cmd"

         if [ "$1" == "debug" ] 
         then
           exit 0
         fi

         info=$(eval "$cmd")
         log $info

           # Archive the original file
           if [[ "$info" == *Success* ]]
           then
                log "$file was sucessfully uploaded"
                mv "$file" "$file.uploaded"
           else
                $pathRoot/notify "Upload Error" "$file\n$info"
           fi


} | tee -a $logFile

