#!/bin/bash

# Common
source "${0%/*}/config/common"
source "${0%/*}/config/machine"

file=$1
trigger=$2

echo $(date)" : $file - $trigger" >> $logFile

# If we can actually find the file..
if [ ! -e "$file" ] 
then
  echo "$file not found!" >> $logFile
  exit 1
fi

# .. and the file is an original recording
base=$(basename "$file")
ext="${base##*.}"
if [ ! $ext == "mp4" ] 
then
 echo "$file not a recording" >> $logFile
 exit 1
fi

# ... and we have somewhere to upload it..
if [ -z "$urlUpload" ]
then
  echo "No upload required" >> $logFile
  exit 1
fi

# .. and the file isn't currently open (incrontab can be weird)
statA=$(ls -l "$file")
sleep 2
statB=$(ls -l "$file")
if [ ! "$statA" == "$statB" ]
then
   echo "Ignoring (file is open) $file" >> $logFile
   exit 1
fi


logFile="$file.log"

         # If the filename is an epoch, use it as the start time
         basename=$(basename "$file")
         IFS='.' read -a names <<< "$basename"
         epoch=${names[0]}

         # Look it up in the local meta data
         set -x
         echo "Metadata date is : [$epoch]" >> $logFile
         info=$($pathRoot/parse meta-epoch "$epoch")
         echo "Parse returned   : [$info]" >> $logFile
         set +x

         # Couldn't find anything?  That's OK.. use the default stuff
         if [ "$info" == "" ]
         then
             echo "Couldn't find metadata : $roomID / $epoch"  >> $logFile
             info="$roomID Recording|Recording|capture-$roomID"
         fi

         echo "Metadata : $info"  >> $logFile

         IFS='|' read -a meta <<< "$info"
         metaTitle=${meta[0]}
         metaDescription=${meta[1]}
         metaUser=${meta[2]}
                  
        if [ "$trigger" == "debug" ]
        then
           exit 1
        fi


        # Convert as needed
         source="$file"
         dest="$file.converted"

         echo "Pre Conversion : $file " >> $logFile
         set -x
         /usr/bin/HandBrakeCLI -i "$source" -o "$dest" --encoder x264 --optimize --start-at frame:5 
         set +x

         if [ -e "$dest" ] 
         then
           file="$dest"
         fi
         echo "Post Conversion : $file " >> $logFile


         # Post to the media server
         set -x
         uploadResult=$(/usr/bin/curl -F "batchMode=Y" -F "public=0" -F "title=$metaTitle" -F "description=$metaDescription" -F "uploadedUser=$metaUser"  -F "keywords=$roomID $basename lecture" -F "file=@$file" "$urlUpload")
         set +x

         # Archive the original file
         echo $uploadResult >> $logFile

         if [[ "$uploadResult" == *Success* ]]
         then
              mv "$file" "$file.uploaded"
              $pathRoot/notify "$roomID : Upload Success" "$file\n$info"
         else
              $pathRoot/notify "$roomID : Upload Failure" "$file\n$info"
         fi

		# Remove uploaded stuff older than 1 week
		find "$pathRoot/video/*.uploaded" -mtime +14 -exec rm {} \;

		# Alert if space is low
		spaceUsed=$(df $pathVideo | tail -1 | awk '{print $5}' | sed 's/%//g')
		[[ $spaceUsed -gt 70 ]] && $pathRoot/notify  "Storage Space Used : $spaceUsed%"




