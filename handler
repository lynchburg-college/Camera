#!/bin/bash

# Common
source "${0%/*}/config/common"
source "${0%/*}/config/machine"

file=$1
trigger=$2

echo $(date)" : $file - $trigger" >> $logFile

# If we can actually find the file..
if [ ! -e "$file" ] 
then
  #echo "$file not found!" >> $logFile
  exit 1
fi

# .. and the file is an original recording
base=$(basename "$file")
ext="${base##*.}"
if [ ! $ext == "mp4" ] 
then
  #echo "$file not a recording" >> $logFile
 exit 1
fi

# ... and we have somewhere to upload it..
if [ -z "$urlUpload" ]
then
  #echo "No upload required" >> $logFile
  exit 1
fi

# .. and the file isn't currently open (incrontab can be weird)
sleep 2
isBusy=$(lsof $file)
if [ ! -z "$isBusy" ]
then
   #echo "Ignoring (file is open) $file" >> $logFile
   exit 1
fi


{

   	     # Convert the file  (sends back the converted filename if sucessful)
         convertResult=$("$pathRoot/convert" "$file")
         echo "Convert result : $convertResult" 
         if [ -e "$convertResult" ] 
         then
           file="$convertResult"
         fi

         # Get the stats of the file
         /usr/bin/avprobe "$file" &> "$file.info"

         # If the filename is a date, use it as the start time
         baseName=$(basename "$file")
         baseName="${baseName%.*}"

         date -d @$baseName > /dev/null 2>&1

         if [ ! $? -eq 1 ]
         then
            asOf="$baseName"
            echo "Using filename ($baseName) as creation date"
         else
            asOf=$(stat -c "%s" $file)
            echo "Using file modified date ($asOf)"
         fi

         #Use the local init-schedule file to look up metadata
         echo "Metadata date is : $asOf"
         echo "$pathRoot/parse meta-epoch $asOf"
         info=$("$pathRoot/parse meta-epoch $asOf")


         # Couldn't find anything?  That's OK.. use the default stuff
         if [ "$info" == "" ]
         then
             echo "Couldn't find metadata : $roomID / $asOf"
             info="-F \"userID=capture_$roomID\" -F \"public=1\" -F \"title=$roomID Recording\""
         else
             echo "Matched : $info"
         fi
           
         echo "$info" > $file.meta
                    
         # Post to the media server
         cmd="/usr/bin/curl $info -F \"batchMode=Y\" -F \"convert=no\" -F \"keywords=$roomID $baseName lecture\" -F \"file=@$file\"  $urlUpload"
         echo "$cmd"


         info=$(eval "$cmd")
         echo $info

         # Archive the original file
         if [[ "$info" == *Success* ]]
         then
              echo "$file was sucessfully uploaded"
              mv "$file" "$file.uploaded"
         else
              $pathRoot/notify "Upload Error" "$file\n$info"
         fi


}  || tee -a "$file.log"


