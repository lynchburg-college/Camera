#!/bin/bash

# Common
source "${0%/*}/config/common"
source "${0%/*}/config/machine"

file=$1
trigger=$2

echo $(date)" : $file - $trigger" >> $logFile

# If we can actually find the file..
if [ ! -e "$file" ] 
then
  echo "$file not found!" >> $logFile
  exit 1
fi

# .. and the file is an original recording
base=$(basename "$file")
ext="${base##*.}"
if [ ! $ext == "mp4" ] 
then
 echo "$file not a recording" >> $logFile
 exit 1
fi

# ... and we have somewhere to upload it..
if [ -z "$urlUpload" ]
then
  echo "No upload required" >> $logFile
  exit 1
fi

# .. and the file isn't currently open (incrontab can be weird)
statA=$(ls -l "$file")
sleep 2
statB=$(ls -l "$file")
if [ ! "$statA" == "$statB" ]
then
   echo "Ignoring (file is open) $file" >> $logFile
   exit 1
fi

{

         source="$file"
         dest="$file.converted"

         echo "Pre Conversion : $file " 
         set -x
         /usr/bin/HandBrakeCLI -i "$source" -o "$dest" --encoder x264 --optimize --start-at frame:5 
         set +x

         if [ -e "$dest" ] 
         then
           file="$dest"
         fi
         echo "Post Conversion : $file " 

         # If the filename is an epoch, use it as the start time
         basename=$(basename "$file")
         IFS='.' read -a names <<< "$basename"
         epoch=${names[0]}
         
         #Use the local init-schedule file to look up metadata
         echo "Metadata date is : $epoch" 
         info=$($pathRoot/parse meta-epoch "$epoch")

         # Couldn't find anything?  That's OK.. use the default stuff
         if [ "$info" == "" ]
         then
             echo "Couldn't find metadata : $roomID / $epoch" 
             title="$roomID Recording"
             description="Ad-hoc recording"
             owner="capture-$roomID"
         else 
             echo "Matched : $info" >> "$logFile"
             IFS='|' read title description owner <<< "$info"
         fi
                  
         # Post to the media server
         set -x
         uploadResult=$(/usr/bin/curl -F "title=$title" -F "description=$description" -F "uploadedUser=$owner" -F "batchMode=Y" -F "public=1" -F "keywords=$roomID $basename lecture" -F "file=@$file" "$urlUpload")
         set +x

         # Archive the original file
         if [[ "$uploadResult" == *Success* ]]
         then
              echo "$uploadResult" > "$file.uploaded.result"         
              mv "$file" "$file.uploaded"
              echo "$file was sucessfully uploaded" 
         else
              $pathRoot/notify "Upload Error" "$file"
         fi

} || tee -a "$file.log"


