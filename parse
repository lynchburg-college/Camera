#!/bin/bash

# Common
source "${0%/*}/config/common"
source "${0%/*}/config/machine"

item=${1,,}

# Validations..
if [ "$item" == "" ]
then
 log "No item provided."
 exit 1
fi

case "$item" in

    "meta-epoch" )
           metaMatch=$2
           if [ ! "$metaMatch" == "" ]
           then
              awk '{  if( d+20 >= ($2) &&  d-10 <= ($3) ) { print $0 }  }' d="$metaMatch"  config/meta | tail -1  # | cut -d'|' -f 3-
           fi
           ;;


    "meta-id" )
           metaMatch=$2
           if [ ! "$metaMatch" == "" ]
           then
              grep "$metaMatch" config/meta 
           fi
           ;;

    "schedule" )
					scheduleCounter=1

					inputLocal="config/schedule-local"
                    touch $inputLocal

					inputRemote="config/schedule-remote"
                    touch $inputRemote

					outputSchedule="config/init-schedule"
					backup "$outputSchedule"

                    outputMeta="config/meta"
					backup "$outputMeta"

                    sourceData=$(grep -h "|" "$inputLocal" "$inputRemote") 

                    echo "del schedule" > $outputSchedule
                    echo "" > $outputMeta

                    while IFS="|" read -r courseid start stop title description owner
					do

                      sid="s$scheduleCounter-$courseid"

					  startEpoch=$(date +"%s" -d "$start")
					  stopEpoch=$(date +"%s" -d "$stop")

					  startTimestamp=$(date +"%Y/%m/%d-%H:%M:%S" -d @$startEpoch)

                      # Trim off 5 seconds
                      let stopEpoch=stopEpoch-5
					  stopTimestamp=$(date +"%Y/%m/%d-%H:%M:%S" -d @$stopEpoch)

					  meta="$sid|$startEpoch|$stopEpoch|$title|$description|$owner"

						{
							echo ""
							echo "new   $sid-start schedule"
							echo "setup $sid-start date $startTimestamp"
							echo "setup $sid-start append control recorder stop"
							echo "setup $sid-start append control recorder play"
							echo "setup $sid-start enabled"
							echo ""
							echo "new   $sid-stop schedule"
							echo "setup $sid-stop date $stopTimestamp"
							echo "setup $sid-stop append control recorder stop"
							echo "setup $sid-stop enabled"

						} >> "$outputSchedule"

                        {
                            echo "$meta"
                        } >> "$outputMeta"

      		         let scheduleCounter=scheduleCounter+1
       			done  <<< "$sourceData"

               log "Parsed $scheduleCounter items into $outputSchedule"
               ;;


esac

exit 0

